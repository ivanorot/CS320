(0) <program> [0]				
(1) program [1]				(2) <id> [1]				(3) begin [1]				(4) <pgmBody> [1]				(5) end [1]				
(6) fibonacci [3]				(7) <decl> [5]				(8) <func_declarations> [5]				
(9) <string_decl> [8]				(10) <decl> [8]				(11) <func_decl> [9]				(12) <func_declarations> [9]				
(13) string [10]				(14) <id> [10]				(15) := [10]				(16) <str> [10]				(17) ; [10]				(18) <string_decl> [11]				(19) <decl> [11]				(20) function [12]				(21) <any_type> [12]				(22) <id> [12]				(23) ( [12]				(24) <param_decl_list> [12]				(25) ) [12]				(26) begin [12]				(27) <func_body> [12]				(28) end [12]				(29) <func_decl> [13]				(30) <func_declarations> [13]				
(31) input [15]				(32) "Please provide an integer number: " [17]				(33) string [19]				(34) <id> [19]				(35) := [19]				(36) <str> [19]				(37) ; [19]				(38) <string_decl> [20]				(39) <decl> [20]				(40) <var_type> [22]				(41) Fib [23]				(42) <param_decl> [25]				(43) <param_decl_tail> [25]				(44) <decl> [28]				(45) <stmt_list> [28]				(46) function [30]				(47) <any_type> [30]				(48) <id> [30]				(49) ( [30]				(50) <param_decl_list> [30]				(51) ) [30]				(52) begin [30]				(53) <func_body> [30]				(54) end [30]				
(55) space [34]				(56) " " [36]				(57) string [38]				(58) <id> [38]				(59) := [38]				(60) <str> [38]				(61) ; [38]				(62) int [40]				(63) <var_type> [42]				(64) <id> [42]				(65) <stmt> [45]				(66) <stmt_list> [45]				(67) void [47]				(68) main [48]				(69) <decl> [53]				(70) <stmt_list> [53]				
(71) eol [57]				(72) "\n" [59]				(73) int [62]				(74) n [63]				(75) <if_stmt> [64]				(76) <var_decl> [68]				(77) <decl> [68]				(78) <stmt> [69]				(79) <stmt_list> [69]				
(80) if [73]				(81) ( [73]				(82) <cond> [73]				(83) ) [73]				(84) decl [73]				(85) stmt_list [73]				(86) else_part [73]				(87) endif [73]				(88) <var_type> [74]				(89) <id_list> [74]				(90) ; [74]				(91) <var_decl> [75]				(92) <decl> [75]				(93) <base_stmt> [76]				(94) <stmt> [77]				(95) <stmt_list> [77]				
(96) expr [80]				(97) op [80]				(98) expr [80]				(99) <stmt> [83]				(100) <stmt_list> [83]				(101) elseif [84]				(102) ( [84]				(103) cond [84]				(104) ) [84]				(105) decl [84]				(106) stmt_list [84]				(107) else_part [84]				(108) int [86]				(109) <id> [87]				(110) <id_tail> [87]				(111) <var_type> [89]				(112) <id_list> [89]				(113) ; [89]				(114) <write_stmt> [91]				(115) <base_stmt> [92]				(116) <stmt> [93]				(117) <stmt_list> [93]				
(118) <factor> [94]				(119) <expr_tail> [94]				(120) >> [95]				(121) <factor> [96]				(122) <expr_tail> [96]				(123) <base_stmt> [97]				(124) expr [101]				(125) op [101]				(126) expr [101]				(127) <stmt> [104]				(128) <stmt_list> [104]				(129) elseif [105]				(130) ( [105]				(131) cond [105]				(132) ) [105]				(133) decl [105]				(134) stmt_list [105]				(135) else_part [105]				(136) i [107]				(137) , [108]				(138) <id> [108]				(139) <id_tail> [108]				(140) float [109]				(141) <id> [110]				(142) <id_tail> [110]				(143) write [112]				(144) ( [112]				(145) <id_list> [112]				(146) ) [112]				(147) ; [112]				(148) <read_stmt> [113]				(149) <base_stmt> [114]				(150) <stmt> [115]				(151) <stmt_list> [115]				
(152) <postfix_expr> [116]				(153) <factor_tail> [116]				(154) <postfix_expr> [119]				(155) <factor_tail> [119]				(156) <return_stmt> [121]				(157) <factor> [122]				(158) <expr_tail> [122]				(159) == [123]				(160) <factor> [124]				(161) <expr_tail> [124]				(162) <base_stmt> [125]				(163) expr [129]				(164) op [129]				(165) expr [129]				(166) <stmt> [132]				(167) <stmt_list> [132]				(168) elseif [133]				(169) ( [133]				(170) cond [133]				(171) ) [133]				(172) decl [133]				(173) stmt_list [133]				(174) else_part [133]				(175) stop [136]				(176) , [137]				(177) <id> [137]				(178) <id_tail> [137]				(179) x [139]				(180) <id> [143]				(181) <id_tail> [143]				(182) read [146]				(183) ( [146]				(184) <id_list> [146]				(185) ) [146]				(186) ; [146]				(187) <assign_stmt> [147]				(188) <do_while_stmt> [148]				
(189) <primary> [150]				(190) <primary> [152]				(191) return [154]				(192) <expr [154]				(193) ; [154]				(194) <postfix_expr> [155]				(195) <factor_tail> [155]				(196) <postfix_expr> [158]				(197) <factor_tail> [158]				(198) <return_stmt> [160]				(199) <factor> [161]				(200) <expr_tail> [161]				(201) == [162]				(202) <factor> [163]				(203) <expr_tail> [163]				(204) <base_stmt> [164]				(205) expr [168]				(206) op [168]				(207) expr [168]				(208) <stmt> [171]				(209) <stmt_list> [171]				(210) result [175]				(211) input [178]				(212) <id> [182]				(213) <id_tail> [182]				(214) <assign_expr> [185]				(215) ; [185]				(216) do [186]				(217) <decl> [186]				(218) <stmt_list> [186]				(219) while [186]				(220) ( [186]				(221) <cond> [186]				(222) ) [186]				(223) ; [186]				
(224) <id> [187]				(225) 2 [188]				(226) <factor> [190]				(227) <expr_tail> [190]				(228) <primary> [192]				(229) <primary> [194]				(230) return [196]				(231) <expr [196]				(232) ; [196]				(233) <postfix_expr> [197]				(234) <factor_tail> [197]				(235) <postfix_expr> [200]				(236) <factor_tail> [200]				(237) <return_stmt> [202]				(238) <factor> [203]				(239) <expr_tail> [203]				(240) == [204]				(241) <factor> [205]				(242) <expr_tail> [205]				(243) <base_stmt> [206]				(244) stop [210]				(245) <id> [212]				(246) := [212]				(247) <expr> [212]				(248) <stmt> [216]				(249) <stmt_list> [216]				(250) expr [219]				(251) op [219]				(252) expr [219]				
(253) n [222]				(254) <postfix_expr> [223]				(255) <factor_tail> [223]				(256) <addop> [224]				(257) <factor> [224]				(258) <expr_tail> [224]				(259) <id> [225]				(260) 0 [226]				(261) <factor> [228]				(262) <expr_tail> [228]				(263) <primary> [230]				(264) <primary> [232]				(265) return [234]				(266) <expr [234]				(267) ; [234]				(268) <postfix_expr> [235]				(269) <factor_tail> [235]				(270) <postfix_expr> [238]				(271) <factor_tail> [238]				(272) <return_stmt> [240]				(273) i [242]				(274) <factor> [244]				(275) <expr_tail> [244]				(276) <base_stmt> [245]				(277) <stmt> [246]				(278) <stmt_list> [246]				(279) <factor> [247]				(280) <expr_tail> [247]				(281) != [248]				(282) <factor> [249]				(283) <expr_tail> [249]				
(284) <call_expr> [251]				(285) + [253]				(286) <postfix_expr> [254]				(287) <factor_tail> [254]				(288) n [256]				(289) <postfix_expr> [257]				(290) <factor_tail> [257]				(291) <id> [259]				(292) 1 [260]				(293) <factor> [262]				(294) <expr_tail> [262]				(295) <primary> [264]				(296) <primary> [266]				(297) return [268]				(298) <expr [268]				(299) ; [268]				(300) <postfix_expr> [270]				(301) <factor_tail> [270]				(302) <assign_stmt> [272]				(303) <base_stmt> [273]				(304) <stmt> [274]				(305) <stmt_list> [274]				(306) <postfix_expr> [275]				(307) <factor_tail> [275]				(308) <postfix_expr> [278]				(309) <factor_tail> [278]				
(310) <id> [280]				(311) ( [280]				(312) <expr_list> [280]				(313) ) [280]				(314) <call_expr> [282]				(315) <primary> [285]				(316) n [287]				(317) <postfix_expr> [288]				(318) <factor_tail> [288]				(319) <id> [290]				(320) 2 [291]				(321) <factor> [293]				(322) <expr_tail> [293]				(323) <primary> [295]				(324) <assign_expr> [297]				(325) ; [297]				(326) <write_stmt> [298]				(327) <base_stmt> [299]				(328) <stmt> [300]				(329) <stmt_list> [300]				(330) <primary> [301]				(331) <primary> [303]				
(332) Fib [305]				(333) <expr> [307]				(334) <expr_list_tail> [307]				(335) <id> [309]				(336) ( [309]				(337) <expr_list> [309]				(338) ) [309]				(339) 0 [310]				(340) <primary> [312]				(341) n [314]				(342) <postfix_expr> [315]				(343) <factor_tail> [315]				(344) 0 [317]				(345) <id> [318]				(346) := [318]				(347) <expr> [318]				(348) write [320]				(349) ( [320]				(350) <id_list> [320]				(351) ) [320]				(352) ; [320]				(353) <write_stmt> [321]				(354) <base_stmt> [322]				(355) <id> [324]				(356) <id> [325]				
(357) <factor> [327]				(358) <expr_tail> [327]				(359) Fib [329]				(360) <expr> [331]				(361) <expr_list_tail> [331]				(362) 1 [333]				(363) <primary> [335]				(364) result [337]				(365) <factor> [339]				(366) <expr_tail> [339]				(367) <id> [342]				(368) <id_tail> [342]				(369) write [345]				(370) ( [345]				(371) <id_list> [345]				(372) ) [345]				(373) ; [345]				(374) <assign_stmt> [346]				(375) i [347]				(376) stop [348]				
(377) <postfix_expr> [349]				(378) <factor_tail> [349]				(379) <addop> [350]				(380) <factor> [350]				(381) <expr_tail> [350]				(382) <factor> [352]				(383) <expr_tail> [352]				(384) 1 [354]				(385) <postfix_expr> [356]				(386) <factor_tail> [356]				(387) i [358]				(388) , [359]				(389) <id> [359]				(390) <id_tail> [359]				(391) <id> [362]				(392) <id_tail> [362]				(393) <assign_expr> [365]				(394) ; [365]				
(395) <primary> [368]				(396) - [370]				(397) <postfix_expr> [371]				(398) <factor_tail> [371]				(399) <postfix_expr> [373]				(400) <factor_tail> [373]				(401) <addop> [374]				(402) <factor> [374]				(403) <expr_tail> [374]				(404) <call_expr> [375]				(405) space [379]				(406) result [381]				(407) , [382]				(408) <id> [382]				(409) <id_tail> [382]				(410) <id> [383]				(411) := [383]				(412) <expr> [383]				
(413) <id> [385]				(414) <primary> [387]				(415) <primary> [389]				(416) - [391]				(417) <postfix_expr> [392]				(418) <factor_tail> [392]				(419) <id> [394]				(420) ( [394]				(421) <expr_list> [394]				(422) ) [394]				(423) eol [398]				(424) i [400]				(425) <factor> [402]				(426) <expr_tail> [402]				
(427) n [403]				(428) 1 [404]				(429) <id> [405]				(430) <primary> [407]				(431) Fib [409]				(432) <expr> [411]				(433) <expr_list_tail> [411]				(434) <postfix_expr> [415]				(435) <factor_tail> [415]				(436) <addop> [416]				(437) <factor> [416]				(438) <expr_tail> [416]				
(439) n [418]				(440) 2 [419]				(441) <factor> [421]				(442) <expr_tail> [421]				(443) <primary> [423]				(444) + [425]				(445) <postfix_expr> [426]				(446) <factor_tail> [426]				
(447) <postfix_expr> [429]				(448) <factor_tail> [429]				(449) <id> [431]				(450) <primary> [433]				
(451) <primary> [435]				(452) i [437]				(453) 1 [438]				
(454) <id> [439]				
(455) i [441]				
